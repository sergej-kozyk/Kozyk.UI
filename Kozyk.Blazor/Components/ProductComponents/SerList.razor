@using Srv.Domain.Entities
@using Kozyk.Blazor.Services
@implements IDisposable
@rendermode InteractiveServer


<h3>Изделие дня</h3>
@if(ProductService.Products!=null

		&& ProductService.Products.Count() != 0)
{
	<table class="table table-striped">
		<thead>
		<th>Название</th>
		<th></th>
			@foreach (var item in ProductService.Products)
			{
			<tr>
				<td>@item.Name</td>
				<td>
					<button class="btn btn-outline-dark"
							@onclick="@(()=>OnServingSelected(item.Id))">
						Подробно
					</button>
				</td>
			</tr>
			}
		</thead>
	</table>
}
@code {
	[CascadingParameter]
	public IProductService<Serving> ProductService { get; set; }
	[Parameter]
	public EventCallback<int> ServingSelected { get; set; }
	protected override async Task OnInitializedAsync()
	{
		ProductService.ListChanged += StateHasChanged;
	}
	public async void OnServingSelected(int id)
	{
		await ServingSelected.InvokeAsync(id);
	}
	public void Dispose()
	{
		ProductService.ListChanged -= StateHasChanged;
	}
}